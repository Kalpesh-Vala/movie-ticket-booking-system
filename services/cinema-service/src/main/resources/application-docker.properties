# Docker/Production Configuration for Cinema Service

# ===================================================================
# Server Configuration
# ===================================================================
server.port=${SERVER_PORT:8002}

# ===================================================================
# Database Configuration
# ===================================================================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://movie-postgres:5432/cinema_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres123}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

# ===================================================================
# JPA/Hibernate Configuration
# ===================================================================
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:true}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# ===================================================================
# Connection Pool Configuration (HikariCP)
# ===================================================================
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE:5}
spring.datasource.hikari.connection-timeout=${SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.idle-timeout=${SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${SPRING_DATASOURCE_HIKARI_MAX_LIFETIME:1200000}
spring.datasource.hikari.leak-detection-threshold=60000

# ===================================================================
# gRPC Configuration
# ===================================================================
grpc.server.port=${GRPC_SERVER_PORT:9090}

# ===================================================================
# Actuator Configuration (Health checks, metrics)
# ===================================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# ===================================================================
# Logging Configuration
# ===================================================================
logging.level.com.movieticket=${LOGGING_LEVEL_COM_MOVIETICKET:INFO}
logging.level.org.springframework=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK:WARN}
logging.level.org.hibernate=${LOGGING_LEVEL_ORG_HIBERNATE:WARN}
logging.level.io.grpc=${LOGGING_LEVEL_IO_GRPC:INFO}

# Console logging pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ===================================================================
# Application Information
# ===================================================================
info.app.name=Cinema Service
info.app.description=Movie Ticket Booking System - Cinema Management Service
info.app.version=1.0.0
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# ===================================================================
# Spring Configuration
# ===================================================================
spring.application.name=cinema-service
spring.main.banner-mode=log

# ===================================================================
# Jackson Configuration (JSON serialization)
# ===================================================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# ===================================================================
# Transaction Configuration
# ===================================================================
spring.transaction.default-timeout=30
spring.jpa.properties.hibernate.connection.autocommit=false

# ===================================================================
# Cache Configuration (if needed)
# ===================================================================
spring.cache.type=simple

# ===================================================================
# Error Handling Configuration
# ===================================================================
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param